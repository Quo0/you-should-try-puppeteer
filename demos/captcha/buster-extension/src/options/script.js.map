{"version":3,"sources":["webpack:///./src/options/App.vue?852c","webpack:///./src/options/App.vue?f362","webpack:///src/options/App.vue","webpack:///./src/options/App.vue","webpack:///./src/options/App.vue?d5d7","webpack:///./src/options/main.js","webpack:///./src/utils/data.js"],"names":["components","data","dataLoaded","selectOptions","speechService","ibmSpeechApiLoc","microsoftSpeechApiLoc","witSpeechApiLang","witSpeechApis","showClientAppNotice","clientAppDownloadUrl","installGuideUrl","options","googleSpeechApiKey","ibmSpeechApiKey","microsoftSpeechApiKey","witSpeechApiKeys","loadEnglishChallenge","tryEnglishSpeechModel","simulateUserInput","autoUpdateClientApp","watch","async","value","this","os","methods","getText","setWitSpeechApiLangOptions","filter","addWitSpeechApi","push","saveWitSpeechApiKey","apiKeys","Object","assign","lang","created","storage","option","keys","$watch","document","title","_vm","_h","$createElement","_c","_self","attrs","staticClass","_m","_v","model","callback","$$v","$set","expression","trim","_e","_l","item","key","id","on","$event","domProps","_s","$refs","dlLink","click","ref","fonts","load","e","Vue","el","render","h","App","init","optionKeys","clientAppPlatforms","recaptchaChallengeUrlRx","captchaGoogleSpeechApiLangCodes","ar","af","am","hy","az","eu","bn","bg","ca","hr","cs","da","nl","en","et","fil","fi","fr","gl","ka","de","gu","iw","hi","hu","is","it","ja","kn","ko","lo","lv","lt","ms","ml","mr","mn","no","fa","pl","pt","ro","ru","sr","si","sk","sl","es","sw","sv","ta","te","th","tr","uk","ur","vi","zu","captchaIbmSpeechApiLangCodes","captchaMicrosoftSpeechApiLangCodes","captchaWitSpeechApiLangCodes","ibmSpeechApiUrls","london","frankfurt","dallas","washington","sydney","tokyo","microsoftSpeechApiUrls","eastAu","centralCa","centralUs","centralFr","centralIn","eastJp","centralKr","northCentralUs","southCentralUs","southUk","eastUs","eastUs2","westUs","westUs2","eastAsia","southeastAsia","westEu","northEu"],"mappings":"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","file":"options/script.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js!../../node_modules/sass-loader/dist/cjs.js??ref--2-3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js!../../node_modules/sass-loader/dist/cjs.js??ref--2-3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","<template>\n  <div id=\"app\" v-if=\"dataLoaded\">\n    <div class=\"section\">\n      <div class=\"section-title\" v-once>\n        {{ getText('optionSectionTitle_services') }}\n      </div>\n      <div class=\"option-wrap\">\n        <div class=\"option select\">\n          <v-select\n            :label=\"getText('optionTitle_speechService')\"\n            v-model=\"options.speechService\"\n            :options=\"selectOptions.speechService\"\n          >\n          </v-select>\n        </div>\n\n        <div\n          class=\"option text-field\"\n          v-if=\"options.speechService === 'googleSpeechApi'\"\n        >\n          <v-textfield\n            v-model.trim=\"options.googleSpeechApiKey\"\n            :label=\"getText('inputLabel_apiKey')\"\n          >\n          </v-textfield>\n        </div>\n\n        <div\n          class=\"option select\"\n          v-if=\"options.speechService === 'ibmSpeechApi'\"\n        >\n          <v-select\n            :label=\"getText('optionTitle_ibmSpeechApiLoc')\"\n            v-model=\"options.ibmSpeechApiLoc\"\n            :options=\"selectOptions.ibmSpeechApiLoc\"\n          >\n          </v-select>\n        </div>\n        <div\n          class=\"option text-field\"\n          v-if=\"options.speechService === 'ibmSpeechApi'\"\n        >\n          <v-textfield\n            v-model.trim=\"options.ibmSpeechApiKey\"\n            :label=\"getText('inputLabel_apiKey')\"\n          >\n          </v-textfield>\n        </div>\n\n        <div\n          class=\"option select\"\n          v-if=\"options.speechService === 'microsoftSpeechApi'\"\n        >\n          <v-select\n            :label=\"getText('optionTitle_microsoftSpeechApiLoc')\"\n            v-model=\"options.microsoftSpeechApiLoc\"\n            :options=\"selectOptions.microsoftSpeechApiLoc\"\n          >\n          </v-select>\n        </div>\n        <div\n          class=\"option text-field\"\n          v-if=\"options.speechService === 'microsoftSpeechApi'\"\n        >\n          <v-textfield\n            v-model.trim=\"options.microsoftSpeechApiKey\"\n            :label=\"getText('inputLabel_apiKey')\"\n          >\n          </v-textfield>\n        </div>\n\n        <v-textfield\n          v-if=\"options.speechService === 'witSpeechApi'\"\n          v-for=\"item in witSpeechApis\"\n          :key=\"item.id\"\n          :value=\"options.witSpeechApiKeys[item] || ''\"\n          :label=\"\n            getText('inputLabel_apiKeyType', [\n              getText(`optionValue_witSpeechApiLang_${item}`)\n            ])\n          \"\n          @input=\"saveWitSpeechApiKey($event.trim(), item)\"\n        >\n        </v-textfield>\n        <div\n          class=\"wit-add-api\"\n          v-if=\"options.speechService === 'witSpeechApi'\"\n        >\n          <v-select\n            v-model=\"witSpeechApiLang\"\n            :options=\"selectOptions.witSpeechApiLang\"\n            :label=\"getText('optionTitle_witSpeechApiLang')\"\n          >\n          </v-select>\n          <v-button\n            :outlined=\"true\"\n            :disabled=\"!witSpeechApiLang\"\n            :label=\"getText('buttonText_addApi')\"\n            @click=\"addWitSpeechApi\"\n          >\n          </v-button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"section\">\n      <div class=\"section-title\" v-once>\n        {{ getText('optionSectionTitle_misc') }}\n      </div>\n      <div class=\"option-wrap\">\n        <div class=\"option\">\n          <v-form-field\n            input-id=\"lec\"\n            :label=\"getText('optionTitle_loadEnglishChallenge')\"\n          >\n            <v-switch\n              id=\"lec\"\n              v-model=\"options.loadEnglishChallenge\"\n            ></v-switch>\n          </v-form-field>\n        </div>\n\n        <div class=\"option\" v-if=\"!options.loadEnglishChallenge\">\n          <v-form-field\n            input-id=\"esm\"\n            :label=\"getText('optionTitle_tryEnglishSpeechModel')\"\n          >\n            <v-switch\n              id=\"esm\"\n              v-model=\"options.tryEnglishSpeechModel\"\n            ></v-switch>\n          </v-form-field>\n        </div>\n\n        <div class=\"option\">\n          <v-form-field\n            input-id=\"si\"\n            :label=\"getText('optionTitle_simulateUserInput')\"\n          >\n            <v-switch id=\"si\" v-model=\"options.simulateUserInput\"></v-switch>\n          </v-form-field>\n        </div>\n\n        <div class=\"option\">\n          <v-form-field\n            input-id=\"auc\"\n            v-if=\"options.simulateUserInput\"\n            :label=\"getText('optionTitle_autoUpdateClientApp')\"\n          >\n            <v-switch id=\"auc\" v-model=\"options.autoUpdateClientApp\"></v-switch>\n          </v-form-field>\n        </div>\n\n        <div class=\"client-download\" v-if=\"showClientAppNotice\">\n          <div\n            class=\"download-desc\"\n            v-html=\"\n              getText('pageContent_optionClientAppDownloadDesc', [\n                `<a target='_blank' rel='noreferrer' href='${installGuideUrl}'>${getText(\n                  'linkText_installGuide'\n                )}</a>`\n              ])\n            \"\n          ></div>\n          <div class=\"download-error\" v-if=\"!clientAppDownloadUrl\">\n            {{ getText('pageContent_optionClientAppOSError') }}\n          </div>\n\n          <v-button\n            class=\"download-button\"\n            :unelevated=\"true\"\n            :disabled=\"!clientAppDownloadUrl\"\n            :label=\"getText('buttonText_downloadApp')\"\n            @click=\"$refs.dlLink.click()\"\n          >\n          </v-button>\n          <a\n            ref=\"dlLink\"\n            class=\"download-link\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            :href=\"clientAppDownloadUrl\"\n          ></a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport browser from 'webextension-polyfill';\nimport {Button, Select, Switch, FormField, TextField} from 'ext-components';\n\nimport storage from 'storage/storage';\nimport {getOptionLabels, pingClientApp} from 'utils/app';\nimport {getText, getPlatform} from 'utils/common';\nimport {clientAppVersion} from 'utils/config';\nimport {\n  optionKeys,\n  clientAppPlatforms,\n  captchaWitSpeechApiLangCodes\n} from 'utils/data';\n\nexport default {\n  components: {\n    [Button.name]: Button,\n    [Select.name]: Select,\n    [Switch.name]: Switch,\n    [FormField.name]: FormField,\n    [TextField.name]: TextField\n  },\n\n  data: function() {\n    return {\n      dataLoaded: false,\n\n      selectOptions: getOptionLabels({\n        speechService: [\n          'witSpeechApiDemo',\n          'googleSpeechApi',\n          'witSpeechApi',\n          'ibmSpeechApi',\n          'microsoftSpeechApi'\n        ],\n        ibmSpeechApiLoc: [\n          'london',\n          'frankfurt',\n          'dallas',\n          'washington',\n          'sydney',\n          'tokyo'\n        ],\n        microsoftSpeechApiLoc: [\n          'eastAu',\n          'centralCa',\n          'centralUs',\n          'centralFr',\n          'centralIn',\n          'eastJp',\n          'centralKr',\n          'northCentralUs',\n          'southCentralUs',\n          'southUk',\n          'eastUs',\n          'eastUs2',\n          'westUs',\n          'westUs2',\n          'eastAsia',\n          'southeastAsia',\n          'westEu',\n          'northEu'\n        ],\n        witSpeechApiLang: [\n          ...new Set(\n            Object.values(captchaWitSpeechApiLangCodes).filter(Boolean)\n          )\n        ].sort()\n      }),\n\n      witSpeechApiLang: '',\n      witSpeechApis: [],\n\n      showClientAppNotice: false,\n      clientAppDownloadUrl: '',\n      installGuideUrl: '',\n\n      options: {\n        speechService: '',\n        googleSpeechApiKey: '',\n        ibmSpeechApiLoc: '',\n        ibmSpeechApiKey: '',\n        microsoftSpeechApiLoc: '',\n        microsoftSpeechApiKey: '',\n        witSpeechApiKeys: {},\n        loadEnglishChallenge: false,\n        tryEnglishSpeechModel: false,\n        simulateUserInput: false,\n        autoUpdateClientApp: false\n      }\n    };\n  },\n\n  watch: {\n    'options.simulateUserInput': async function(value) {\n      if (value) {\n        try {\n          await pingClientApp();\n        } catch (e) {\n          if (!this.clientAppDownloadUrl) {\n            const {os, arch} = await getPlatform();\n            if (clientAppPlatforms.includes(`${os}/${arch}`)) {\n              this.installGuideUrl = `https://github.com/dessant/buster-client/wiki/Installing-the-client-app#${os}`;\n              this.clientAppDownloadUrl = `https://github.com/dessant/buster-client/releases/download/v${clientAppVersion}/buster-client-setup-v${clientAppVersion}-${os}-${arch}`;\n              if (os === 'windows') {\n                this.clientAppDownloadUrl += '.exe';\n              }\n            }\n          }\n\n          this.showClientAppNotice = true;\n          return;\n        }\n      }\n\n      this.showClientAppNotice = false;\n    }\n  },\n\n  methods: {\n    getText,\n\n    setWitSpeechApiLangOptions: function() {\n      this.selectOptions.witSpeechApiLang = this.selectOptions.witSpeechApiLang.filter(\n        item => !this.witSpeechApis.includes(item.id)\n      );\n    },\n\n    addWitSpeechApi: function() {\n      this.witSpeechApis.push(this.witSpeechApiLang);\n      this.witSpeechApiLang = '';\n      this.setWitSpeechApiLangOptions();\n    },\n\n    saveWitSpeechApiKey: function(value, lang) {\n      const apiKeys = this.options.witSpeechApiKeys;\n      if (value) {\n        this.options.witSpeechApiKeys = Object.assign({}, apiKeys, {\n          [lang]: value\n        });\n      } else if (apiKeys[lang]) {\n        delete apiKeys[lang];\n        this.options.witSpeechApiKeys = Object.assign({}, apiKeys);\n      }\n    }\n  },\n\n  created: async function() {\n    const options = await storage.get(optionKeys, 'sync');\n\n    for (const option of Object.keys(this.options)) {\n      this.options[option] = options[option];\n      this.$watch(`options.${option}`, async function(value) {\n        await storage.set({[option]: value}, 'sync');\n      });\n    }\n\n    this.witSpeechApis = Object.keys(options.witSpeechApiKeys);\n    this.setWitSpeechApiLangOptions();\n\n    document.title = getText('pageTitle', [\n      getText('pageTitle_options'),\n      getText('extensionName')\n    ]);\n\n    this.dataLoaded = true;\n  }\n};\n</script>\n\n<style lang=\"scss\">\n$mdc-theme-primary: #1abc9c;\n\n@import '@material/select/mdc-select';\n@import '@material/theme/mixins';\n@import '@material/typography/mixins';\n@import '@material/button/mixins';\n\nbody {\n  margin: 0;\n  @include mdc-typography-base;\n  font-size: 100%;\n  background-color: #ffffff;\n  overflow: visible !important;\n}\n\n#app {\n  display: grid;\n  grid-row-gap: 32px;\n  padding: 24px;\n}\n\n.mdc-switch {\n  margin-right: 16px;\n}\n\n.section-title,\n.section-desc {\n  @include mdc-theme-prop(color, text-primary-on-light);\n}\n\n.section-title {\n  @include mdc-typography(headline6);\n}\n\n.section-desc {\n  @include mdc-typography(body2);\n  padding-top: 8px;\n}\n\n.option-wrap {\n  display: grid;\n  grid-row-gap: 24px;\n  padding-top: 24px;\n  grid-auto-columns: min-content;\n}\n\n.option {\n  display: flex;\n  align-items: center;\n  height: 24px;\n\n  & .mdc-form-field {\n    max-width: calc(100vw - 48px);\n\n    & label {\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n}\n\n.option {\n  &.select,\n  &.text-field {\n    height: 56px;\n  }\n}\n\n.option.select {\n  align-items: start;\n\n  & .mdc-select__anchor,\n  & .mdc-select__menu {\n    max-width: calc(100vw - 48px);\n  }\n\n  & .mdc-select__selected-text {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n}\n\n.wit-add-api {\n  display: flex;\n  align-items: center;\n}\n\n.wit-add-api > button {\n  margin-left: 24px;\n  white-space: nowrap;\n}\n\n.client-download {\n  margin-left: 48px;\n}\n\n.download-desc,\n.download-error {\n  @include mdc-theme-prop(color, text-primary-on-light);\n  @include mdc-typography(body2);\n  min-width: 300px;\n}\n\n.download-error {\n  margin-top: 12px;\n  color: #e74c3c;\n}\n\n.download-link {\n  visibility: hidden;\n}\n\n.download-button {\n  @include mdc-button-ink-color(#fff);\n  width: 200px;\n  height: 48px;\n  margin-top: 24px;\n}\n</style>\n","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6391dc54&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.dataLoaded)?_c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"section\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"option-wrap\"},[_c('div',{staticClass:\"option select\"},[_c('v-select',{attrs:{\"label\":_vm.getText('optionTitle_speechService'),\"options\":_vm.selectOptions.speechService},model:{value:(_vm.options.speechService),callback:function ($$v) {_vm.$set(_vm.options, \"speechService\", $$v)},expression:\"options.speechService\"}})],1),_vm._v(\" \"),(_vm.options.speechService === 'googleSpeechApi')?_c('div',{staticClass:\"option text-field\"},[_c('v-textfield',{attrs:{\"label\":_vm.getText('inputLabel_apiKey')},model:{value:(_vm.options.googleSpeechApiKey),callback:function ($$v) {_vm.$set(_vm.options, \"googleSpeechApiKey\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"options.googleSpeechApiKey\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'ibmSpeechApi')?_c('div',{staticClass:\"option select\"},[_c('v-select',{attrs:{\"label\":_vm.getText('optionTitle_ibmSpeechApiLoc'),\"options\":_vm.selectOptions.ibmSpeechApiLoc},model:{value:(_vm.options.ibmSpeechApiLoc),callback:function ($$v) {_vm.$set(_vm.options, \"ibmSpeechApiLoc\", $$v)},expression:\"options.ibmSpeechApiLoc\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'ibmSpeechApi')?_c('div',{staticClass:\"option text-field\"},[_c('v-textfield',{attrs:{\"label\":_vm.getText('inputLabel_apiKey')},model:{value:(_vm.options.ibmSpeechApiKey),callback:function ($$v) {_vm.$set(_vm.options, \"ibmSpeechApiKey\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"options.ibmSpeechApiKey\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'microsoftSpeechApi')?_c('div',{staticClass:\"option select\"},[_c('v-select',{attrs:{\"label\":_vm.getText('optionTitle_microsoftSpeechApiLoc'),\"options\":_vm.selectOptions.microsoftSpeechApiLoc},model:{value:(_vm.options.microsoftSpeechApiLoc),callback:function ($$v) {_vm.$set(_vm.options, \"microsoftSpeechApiLoc\", $$v)},expression:\"options.microsoftSpeechApiLoc\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'microsoftSpeechApi')?_c('div',{staticClass:\"option text-field\"},[_c('v-textfield',{attrs:{\"label\":_vm.getText('inputLabel_apiKey')},model:{value:(_vm.options.microsoftSpeechApiKey),callback:function ($$v) {_vm.$set(_vm.options, \"microsoftSpeechApiKey\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"options.microsoftSpeechApiKey\"}})],1):_vm._e(),_vm._v(\" \"),_vm._l((_vm.witSpeechApis),function(item){return (_vm.options.speechService === 'witSpeechApi')?_c('v-textfield',{key:item.id,attrs:{\"value\":_vm.options.witSpeechApiKeys[item] || '',\"label\":_vm.getText('inputLabel_apiKeyType', [\n            _vm.getText((\"optionValue_witSpeechApiLang_\" + item))\n          ])},on:{\"input\":function($event){_vm.saveWitSpeechApiKey($event.trim(), item)}}}):_vm._e()}),_vm._v(\" \"),(_vm.options.speechService === 'witSpeechApi')?_c('div',{staticClass:\"wit-add-api\"},[_c('v-select',{attrs:{\"options\":_vm.selectOptions.witSpeechApiLang,\"label\":_vm.getText('optionTitle_witSpeechApiLang')},model:{value:(_vm.witSpeechApiLang),callback:function ($$v) {_vm.witSpeechApiLang=$$v},expression:\"witSpeechApiLang\"}}),_vm._v(\" \"),_c('v-button',{attrs:{\"outlined\":true,\"disabled\":!_vm.witSpeechApiLang,\"label\":_vm.getText('buttonText_addApi')},on:{\"click\":_vm.addWitSpeechApi}})],1):_vm._e()],2)]),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"option-wrap\"},[_c('div',{staticClass:\"option\"},[_c('v-form-field',{attrs:{\"input-id\":\"lec\",\"label\":_vm.getText('optionTitle_loadEnglishChallenge')}},[_c('v-switch',{attrs:{\"id\":\"lec\"},model:{value:(_vm.options.loadEnglishChallenge),callback:function ($$v) {_vm.$set(_vm.options, \"loadEnglishChallenge\", $$v)},expression:\"options.loadEnglishChallenge\"}})],1)],1),_vm._v(\" \"),(!_vm.options.loadEnglishChallenge)?_c('div',{staticClass:\"option\"},[_c('v-form-field',{attrs:{\"input-id\":\"esm\",\"label\":_vm.getText('optionTitle_tryEnglishSpeechModel')}},[_c('v-switch',{attrs:{\"id\":\"esm\"},model:{value:(_vm.options.tryEnglishSpeechModel),callback:function ($$v) {_vm.$set(_vm.options, \"tryEnglishSpeechModel\", $$v)},expression:\"options.tryEnglishSpeechModel\"}})],1)],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"option\"},[_c('v-form-field',{attrs:{\"input-id\":\"si\",\"label\":_vm.getText('optionTitle_simulateUserInput')}},[_c('v-switch',{attrs:{\"id\":\"si\"},model:{value:(_vm.options.simulateUserInput),callback:function ($$v) {_vm.$set(_vm.options, \"simulateUserInput\", $$v)},expression:\"options.simulateUserInput\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"option\"},[(_vm.options.simulateUserInput)?_c('v-form-field',{attrs:{\"input-id\":\"auc\",\"label\":_vm.getText('optionTitle_autoUpdateClientApp')}},[_c('v-switch',{attrs:{\"id\":\"auc\"},model:{value:(_vm.options.autoUpdateClientApp),callback:function ($$v) {_vm.$set(_vm.options, \"autoUpdateClientApp\", $$v)},expression:\"options.autoUpdateClientApp\"}})],1):_vm._e()],1),_vm._v(\" \"),(_vm.showClientAppNotice)?_c('div',{staticClass:\"client-download\"},[_c('div',{staticClass:\"download-desc\",domProps:{\"innerHTML\":_vm._s(\n            _vm.getText('pageContent_optionClientAppDownloadDesc', [\n              (\"<a target='_blank' rel='noreferrer' href='\" + _vm.installGuideUrl + \"'>\" + (_vm.getText(\n                'linkText_installGuide'\n              )) + \"</a>\")\n            ])\n          )}}),_vm._v(\" \"),(!_vm.clientAppDownloadUrl)?_c('div',{staticClass:\"download-error\"},[_vm._v(\"\\n          \"+_vm._s(_vm.getText('pageContent_optionClientAppOSError'))+\"\\n        \")]):_vm._e(),_vm._v(\" \"),_c('v-button',{staticClass:\"download-button\",attrs:{\"unelevated\":true,\"disabled\":!_vm.clientAppDownloadUrl,\"label\":_vm.getText('buttonText_downloadApp')},on:{\"click\":function($event){return _vm.$refs.dlLink.click()}}}),_vm._v(\" \"),_c('a',{ref:\"dlLink\",staticClass:\"download-link\",attrs:{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":_vm.clientAppDownloadUrl}})],1):_vm._e()])])]):_vm._e()}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_vm._v(\"\\n      \"+_vm._s(_vm.getText('optionSectionTitle_services'))+\"\\n    \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_vm._v(\"\\n      \"+_vm._s(_vm.getText('optionSectionTitle_misc'))+\"\\n    \")])}]\n\nexport { render, staticRenderFns }","import Vue from 'vue';\n\nimport App from './App';\n\nasync function init() {\n  try {\n    await document.fonts.load('400 14px Roboto');\n    await document.fonts.load('500 14px Roboto');\n  } catch (e) {}\n\n  const vm = new Vue({\n    el: '#app',\n    render: h => h(App)\n  });\n}\n\ninit();\n","const optionKeys = [\n  'speechService',\n  'googleSpeechApiKey',\n  'ibmSpeechApiLoc',\n  'ibmSpeechApiKey',\n  'microsoftSpeechApiLoc',\n  'microsoftSpeechApiKey',\n  'witSpeechApiKeys',\n  'loadEnglishChallenge',\n  'tryEnglishSpeechModel',\n  'simulateUserInput',\n  'autoUpdateClientApp'\n];\n\nconst clientAppPlatforms = [\n  'windows/amd64',\n  'windows/386',\n  'linux/amd64',\n  'macos/amd64'\n];\n\nconst recaptchaChallengeUrlRx = /^https:\\/\\/www\\.google\\.com\\/recaptcha\\/api2\\/bframe.*/;\n\n// https://developers.google.com/recaptcha/docs/language\n// https://cloud.google.com/speech-to-text/docs/languages\nconst captchaGoogleSpeechApiLangCodes = {\n  ar: 'ar-SA', // Arabic\n  af: 'af-ZA', // Afrikaans\n  am: 'am-ET', // Amharic\n  hy: 'hy-AM', // Armenian\n  az: 'az-AZ', // Azerbaijani\n  eu: 'eu-ES', // Basque\n  bn: 'bn-BD', // Bengali\n  bg: 'bg-BG', // Bulgarian\n  ca: 'ca-ES', // Catalan\n  'zh-HK': 'cmn-Hans-HK', // Chinese (Hong Kong)\n  'zh-CN': 'cmn-Hans-CN', // Chinese (Simplified)\n  'zh-TW': 'cmn-Hant-TW', // Chinese (Traditional)\n  hr: 'hr-HR', // Croatian\n  cs: 'cs-CZ', // Czech\n  da: 'da-DK', // Danish\n  nl: 'nl-NL', // Dutch\n  'en-GB': 'en-GB', // English (UK)\n  en: 'en-US', // English (US)\n  et: '', // Estonian\n  fil: 'fil-PH', // Filipino\n  fi: 'fi-FI', // Finnish\n  fr: 'fr-FR', // French\n  'fr-CA': 'fr-CA', // French (Canadian)\n  gl: 'gl-ES', // Galician\n  ka: 'ka-GE', // Georgian\n  de: 'de-DE', // German\n  'de-AT': 'de-DE', // German (Austria)\n  'de-CH': 'de-DE', // German (Switzerland)\n  el: 'el-GR', // Greek\n  gu: 'gu-IN', // Gujarati\n  iw: 'he-IL', // Hebrew\n  hi: 'hi-IN', // Hindi\n  hu: 'hu-HU', // Hungarian\n  is: 'is-IS', // Icelandic\n  id: 'id-ID', // Indonesian\n  it: 'it-IT', // Italian\n  ja: 'ja-JP', // Japanese\n  kn: 'kn-IN', // Kannada\n  ko: 'ko-KR', // Korean\n  lo: 'lo-LA', // Laothian\n  lv: 'lv-LV', // Latvian\n  lt: 'lt-LT', // Lithuanian\n  ms: 'ms-MY', // Malay\n  ml: 'ml-IN', // Malayalam\n  mr: 'mr-IN', // Marathi\n  mn: '', // Mongolian\n  no: 'nb-NO', // Norwegian\n  fa: 'fa-IR', // Persian\n  pl: 'pl-PL', // Polish\n  pt: 'pt-PT', // Portuguese\n  'pt-BR': 'pt-BR', // Portuguese (Brazil)\n  'pt-PT': 'pt-PT', // Portuguese (Portugal)\n  ro: 'ro-RO', // Romanian\n  ru: 'ru-RU', // Russian\n  sr: 'sr-RS', // Serbian\n  si: 'si-LK', // Sinhalese\n  sk: 'sk-SK', // Slovak\n  sl: 'sl-SI', // Slovenian\n  es: 'es-ES', // Spanish\n  'es-419': 'es-MX', // Spanish (Latin America)\n  sw: 'sw-TZ', // Swahili\n  sv: 'sv-SE', // Swedish\n  ta: 'ta-IN', // Tamil\n  te: 'te-IN', // Telugu\n  th: 'th-TH', // Thai\n  tr: 'tr-TR', // Turkish\n  uk: 'uk-UA', // Ukrainian\n  ur: 'ur-IN', // Urdu\n  vi: 'vi-VN', // Vietnamese\n  zu: 'zu-ZA' // Zulu\n};\n\n// https://cloud.ibm.com/docs/services/speech-to-text?topic=speech-to-text-models#models\nconst captchaIbmSpeechApiLangCodes = {\n  ar: 'ar-AR_BroadbandModel', // Arabic\n  af: '', // Afrikaans\n  am: '', // Amharic\n  hy: '', // Armenian\n  az: '', // Azerbaijani\n  eu: '', // Basque\n  bn: '', // Bengali\n  bg: '', // Bulgarian\n  ca: '', // Catalan\n  'zh-HK': '', // Chinese (Hong Kong)\n  'zh-CN': 'zh-CN_BroadbandModel', // Chinese (Simplified)\n  'zh-TW': 'zh-CN_BroadbandModel', // Chinese (Traditional)\n  hr: '', // Croatian\n  cs: '', // Czech\n  da: '', // Danish\n  nl: 'nl-NL_BroadbandModel', // Dutch\n  'en-GB': 'en-GB_BroadbandModel', // English (UK)\n  en: 'en-US_BroadbandModel', // English (US)\n  et: '', // Estonian\n  fil: '', // Filipino\n  fi: '', // Finnish\n  fr: 'fr-FR_BroadbandModel', // French\n  'fr-CA': 'fr-FR_BroadbandModel', // French (Canadian)\n  gl: '', // Galician\n  ka: '', // Georgian\n  de: 'de-DE_BroadbandModel', // German\n  'de-AT': 'de-DE_BroadbandModel', // German (Austria)\n  'de-CH': 'de-DE_BroadbandModel', // German (Switzerland)\n  el: '', // Greek\n  gu: '', // Gujarati\n  iw: '', // Hebrew\n  hi: '', // Hindi\n  hu: '', // Hungarian\n  is: '', // Icelandic\n  id: '', // Indonesian\n  it: 'it-IT_BroadbandModel', // Italian\n  ja: 'ja-JP_BroadbandModel', // Japanese\n  kn: '', // Kannada\n  ko: 'ko-KR_BroadbandModel', // Korean\n  lo: '', // Laothian\n  lv: '', // Latvian\n  lt: '', // Lithuanian\n  ms: '', // Malay\n  ml: '', // Malayalam\n  mr: '', // Marathi\n  mn: '', // Mongolian\n  no: '', // Norwegian\n  fa: '', // Persian\n  pl: '', // Polish\n  pt: 'pt-BR_BroadbandModel', // Portuguese\n  'pt-BR': 'pt-BR_BroadbandModel', // Portuguese (Brazil)\n  'pt-PT': 'pt-BR_BroadbandModel', // Portuguese (Portugal)\n  ro: '', // Romanian\n  ru: '', // Russian\n  sr: '', // Serbian\n  si: '', // Sinhalese\n  sk: '', // Slovak\n  sl: '', // Slovenian\n  es: 'es-ES_BroadbandModel', // Spanish\n  'es-419': 'es-ES_BroadbandModel', // Spanish (Latin America)\n  sw: '', // Swahili\n  sv: '', // Swedish\n  ta: '', // Tamil\n  te: '', // Telugu\n  th: '', // Thai\n  tr: '', // Turkish\n  uk: '', // Ukrainian\n  ur: '', // Urdu\n  vi: '', // Vietnamese\n  zu: '' // Zulu\n};\n\n// https://docs.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support#speech-to-text\nconst captchaMicrosoftSpeechApiLangCodes = {\n  ar: 'ar-EG', // Arabic\n  af: '', // Afrikaans\n  am: '', // Amharic\n  hy: '', // Armenian\n  az: '', // Azerbaijani\n  eu: '', // Basque\n  bn: '', // Bengali\n  bg: '', // Bulgarian\n  ca: 'ca-ES', // Catalan\n  'zh-HK': 'zh-HK', // Chinese (Hong Kong)\n  'zh-CN': 'zh-CN', // Chinese (Simplified)\n  'zh-TW': 'zh-TW', // Chinese (Traditional)\n  hr: '', // Croatian\n  cs: '', // Czech\n  da: 'da-DK', // Danish\n  nl: 'nl-NL', // Dutch\n  'en-GB': 'en-GB', // English (UK)\n  en: 'en-US', // English (US)\n  et: '', // Estonian\n  fil: '', // Filipino\n  fi: 'fi-FI', // Finnish\n  fr: 'fr-FR', // French\n  'fr-CA': 'fr-CA', // French (Canadian)\n  gl: '', // Galician\n  ka: '', // Georgian\n  de: 'de-DE', // German\n  'de-AT': 'de-DE', // German (Austria)\n  'de-CH': 'de-DE', // German (Switzerland)\n  el: '', // Greek\n  gu: 'gu-IN', // Gujarati\n  iw: '', // Hebrew\n  hi: 'hi-IN', // Hindi\n  hu: '', // Hungarian\n  is: '', // Icelandic\n  id: '', // Indonesian\n  it: 'it-IT', // Italian\n  ja: 'ja-JP', // Japanese\n  kn: '', // Kannada\n  ko: 'ko-KR', // Korean\n  lo: '', // Laothian\n  lv: '', // Latvian\n  lt: '', // Lithuanian\n  ms: '', // Malay\n  ml: '', // Malayalam\n  mr: 'mr-IN', // Marathi\n  mn: '', // Mongolian\n  no: 'nb-NO', // Norwegian\n  fa: '', // Persian\n  pl: 'pl-PL', // Polish\n  pt: 'pt-PT', // Portuguese\n  'pt-BR': 'pt-BR', // Portuguese (Brazil)\n  'pt-PT': 'pt-PT', // Portuguese (Portugal)\n  ro: '', // Romanian\n  ru: 'ru-RU', // Russian\n  sr: '', // Serbian\n  si: '', // Sinhalese\n  sk: '', // Slovak\n  sl: '', // Slovenian\n  es: 'es-ES', // Spanish\n  'es-419': 'es-MX', // Spanish (Latin America)\n  sw: '', // Swahili\n  sv: 'sv-SE', // Swedish\n  ta: 'ta-IN', // Tamil\n  te: 'te-IN', // Telugu\n  th: 'th-TH', // Thai\n  tr: 'tr-TR', // Turkish\n  uk: '', // Ukrainian\n  ur: '', // Urdu\n  vi: '', // Vietnamese\n  zu: '' // Zulu\n};\n\nconst captchaWitSpeechApiLangCodes = {\n  ar: 'arabic', // Arabic\n  af: '', // Afrikaans\n  am: '', // Amharic\n  hy: '', // Armenian\n  az: '', // Azerbaijani\n  eu: '', // Basque\n  bn: 'bengali', // Bengali\n  bg: '', // Bulgarian\n  ca: 'catalan', // Catalan\n  'zh-HK': '', // Chinese (Hong Kong)\n  'zh-CN': 'chinese', // Chinese (Simplified)\n  'zh-TW': 'chinese', // Chinese (Traditional)\n  hr: '', // Croatian\n  cs: '', // Czech\n  da: '', // Danish\n  nl: 'dutch', // Dutch\n  'en-GB': 'english', // English (UK)\n  en: 'english', // English (US)\n  et: '', // Estonian\n  fil: '', // Filipino\n  fi: 'finnish', // Finnish\n  fr: 'french', // French\n  'fr-CA': 'french', // French (Canadian)\n  gl: '', // Galician\n  ka: '', // Georgian\n  de: 'german', // German\n  'de-AT': 'german', // German (Austria)\n  'de-CH': 'german', // German (Switzerland)\n  el: '', // Greek\n  gu: '', // Gujarati\n  iw: '', // Hebrew\n  hi: 'hindi', // Hindi\n  hu: '', // Hungarian\n  is: '', // Icelandic\n  id: 'indonesian', // Indonesian\n  it: 'italian', // Italian\n  ja: 'japanese', // Japanese\n  kn: 'kannada', // Kannada\n  ko: 'korean', // Korean\n  lo: '', // Laothian\n  lv: '', // Latvian\n  lt: '', // Lithuanian\n  ms: 'malay', // Malay\n  ml: 'malayalam', // Malayalam\n  mr: '', // Marathi\n  mn: '', // Mongolian\n  no: '', // Norwegian\n  fa: '', // Persian\n  pl: 'polish', // Polish\n  pt: 'portuguese', // Portuguese\n  'pt-BR': 'portuguese', // Portuguese (Brazil)\n  'pt-PT': 'portuguese', // Portuguese (Portugal)\n  ro: '', // Romanian\n  ru: 'russian', // Russian\n  sr: '', // Serbian\n  si: 'sinhala', // Sinhalese\n  sk: '', // Slovak\n  sl: '', // Slovenian\n  es: 'spanish', // Spanish\n  'es-419': 'spanish', // Spanish (Latin America)\n  sw: '', // Swahili\n  sv: 'swedish', // Swedish\n  ta: 'tamil', // Tamil\n  te: 'telugu', // Telugu\n  th: 'thai', // Thai\n  tr: 'turkish', // Turkish\n  uk: '', // Ukrainian\n  ur: 'urdu', // Urdu\n  vi: 'vietnamese', // Vietnamese\n  zu: '' // Zulu\n};\n\n// https://cloud.ibm.com/apidocs/speech-to-text#service-endpoint\nconst ibmSpeechApiUrls = {\n  london: 'https://api.eu-gb.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  frankfurt:\n    'https://api.eu-de.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  dallas:\n    'https://api.us-south.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  washington:\n    'https://api.us-east.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  sydney: 'https://api.au-syd.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  tokyo: 'https://api.jp-tok.speech-to-text.watson.cloud.ibm.com/v1/recognize'\n};\n\n// https://docs.microsoft.com/en-us/azure/cognitive-services/speech-service/rest-speech-to-text#regions-and-endpoints\nconst microsoftSpeechApiUrls = {\n  eastAu:\n    'https://australiaeast.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralCa:\n    'https://canadacentral.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralUs:\n    'https://centralus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralFr:\n    'https://francecentral.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralIn:\n    'https://centralindia.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  eastJp:\n    'https://japaneast.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralKr:\n    'https://koreacentral.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  northCentralUs:\n    'https://northcentralus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  southCentralUs:\n    'https://southcentralus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  southUk:\n    'https://uksouth.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  eastUs:\n    'https://eastus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  eastUs2:\n    'https://eastus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  westUs:\n    'https://westus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  westUs2:\n    'https://westus2.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  eastAsia:\n    'https://eastasia.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  southeastAsia:\n    'https://southeastasia.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  westEu:\n    'https://westeurope.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  northEu:\n    'https://northeurope.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1'\n};\n\nexport {\n  optionKeys,\n  clientAppPlatforms,\n  recaptchaChallengeUrlRx,\n  captchaGoogleSpeechApiLangCodes,\n  captchaIbmSpeechApiLangCodes,\n  captchaMicrosoftSpeechApiLangCodes,\n  captchaWitSpeechApiLangCodes,\n  ibmSpeechApiUrls,\n  microsoftSpeechApiUrls\n};\n"],"sourceRoot":""}